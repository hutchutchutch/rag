services:
  neo4j:
    image: neo4j:5.15
    container_name: rag-neo4j
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    environment:
      NEO4J_AUTH: "neo4j/testpassword"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./neo4j/plugins:/var/lib/neo4j/plugins
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/7687"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:15
    container_name: rag-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgrespassword"
      POSTGRES_DB: "ragdb"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:2.3.0
    container_name: rag-localstack
    ports:
      - "4566:4566"
    environment:
      SERVICES: s3
      DEBUG: 1
      AWS_DEFAULT_REGION: us-west-2
      DATA_DIR: /tmp/localstack/data
    volumes:
      - localstack_data:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ../apps/backend/scripts:/app/scripts  # Mount init script
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "apk --no-cache add python3 py3-pip && pip3 install awscli && chmod +x /app/scripts/init-localstack.sh && /app/scripts/init-localstack.sh && tail -f /dev/null"

  backend:
    build:
      context: ..
      dockerfile: apps/backend/Dockerfile.dev
    container_name: rag-backend
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      NEO4J_URI: bolt://rag-neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: testpassword
      POSTGRES_HOST: rag-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: ragdb
      AWS_ENDPOINT: http://rag-localstack:4566
      AWS_REGION: us-west-2
      AWS_BUCKET_NAME: rag-guide-documents
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    volumes:
      - ../apps/backend:/app
      - backend_nm:/app/node_modules
    working_dir: /app
    command: node --import tsx src/index.ts
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  frontend:
    build:
      context: ..
      dockerfile: apps/frontend/Dockerfile.dev
    container_name: rag-frontend
    depends_on:
      - backend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: "http://localhost:3000/api"
    volumes:
      - ../apps/frontend:/app
      - frontend_nm:/app/node_modules
    working_dir: /app
    command: pnpm dev

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  postgres_data:
  localstack_data:
  backend_nm:
  frontend_nm:
