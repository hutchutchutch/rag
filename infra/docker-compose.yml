
services:
  backend:
    build:
      context: ../
      dockerfile: apps/backend/Dockerfile.dev
    container_name: rag-backend
    ports:
      - "3000:3000"
    volumes: []
    working_dir: /app/apps/backend 
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3000
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: testpassword
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: ragdb
    command: pnpm start:docker   

  frontend:
    build:
      context: ../
      dockerfile: apps/frontend/Dockerfile.dev
    container_name: rag-frontend
    ports:
      - "5173:5173"
    volumes: []
    working_dir: /app/apps/frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:3000
    command: pnpm dev  

  neo4j:
    image: neo4j:5.15
    container_name: rag-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/testpassword
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./neo4j/plugins:/var/lib/neo4j/plugins
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/7687"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:15
    container_name: rag-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: ragdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

